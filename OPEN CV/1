基于教程：https://blog.csdn.net/WUHU648/article/details/118491096   
https://zhuanlan.zhihu.com/p/647447851
Jupyter Notebook:  https://www.xgss.net/5417.html

1.下载一张图片，使用imread读取，然后用imshow显示图片，了解如何改变输出图像的大小，并让图像分别完整显示在显示器的四个角。



import cv2              #导入OpenCV库,opencv读取的格式是BGR
import matplotlib.pyplot as plt   #导入`matplotlib`库的`pyplot`模块，用于显示图像
import numpy as np      #导入NumPy库
%matplotlib inline      #jupyter notebook 可删
img=cv2.imread('example ')     #这一行使用OpenCV的`imread`函数读取名为'example.jpg'的图像文件，并将图像数据存储在变量`img`中
cv2.imshow("img",img)     #这一行使用OpenCV的`imshow`函数显示图像。第一个参数是窗口名称，第二个参数是图像数据
cv2.waitKey(0)           #此行等待按键事件。参数'0'表示它将无限期地等待，直到按下任意键
cv2.destroyAllWindows()   #在按下键并退出等待状态后，此行关闭所有OpenCV窗口




import cv2
import numpy as np

# 读取图像
img = cv2.imread('/home/ak47k98/populay/2024-winter-vacation-task/OPEN CV/photo/6-1.jpg')

# 获取图像原始大小
height, width, _ = img.shape

# 设定新的输出大小
new_width = 200  # 替换为你想要的新宽度
new_height = int((new_width / width) * height)

# 改变输出图像大小
resized_img = cv2.resize(img, (new_width, new_height))

# 创建一个新的窗口
cv2.namedWindow("Resized Image", cv2.WINDOW_NORMAL)

# 在显示器的四个角显示图像
cv2.imshow("Resized Image", resized_img)
cv2.moveWindow("Resized Image", 0, 0)

cv2.waitKey(0)
cv2.destroyAllWindows()


2.了解OpenCV处理单个像素和通道的方法，将一张彩色图片每个像素的RGB值改为三通道均值average。



import cv2
image = cv2.imread("配图2.jpg")
print(image.shape)#打印维度(横行,竖行,三原色彩色通道)  BGR格式存储
cv2.imshow("blue",image[:,:, 0])
cv2.imshow("green",image[:,:, 1])
cv2.imshow("red",image[:,:, 2])
gray = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)#对BGR三原色 各灰度值进行加权平均   灰度图
cv2.imshow("gray",gray)
cv2.waitKey() 
